USE MARCIN_NIERUCHOMOSC;

GO

-- PROCEUDRA ODPOWIEDZIALNA ZA DODANIE RACHUNKU DO TABELI RACHUNKI (UŻYWANA W TRIGGERZE PODCZAS DODAWANIA NOWEGO WYNAJMU INDYWIDUALNEGO) ORAZ WYLICZENIE
-- WSZYSTKICH WARTOSCI POTRZEBNYCH DO RACHUNKU ORAZ ZROBIENIA UPDATE ID_RACHUNKU W TABELI NAJEM_INDYWIDUALNY
CREATE PROCEDURE PROC_DODAJ_RACHUNEK(@UUID_NAJEM varchar(255), @ID_RACHUNEK bigint) AS
BEGIN

    DECLARE @ILE_DNI int;
    DECLARE @RABAT decimal(2, 2);
    DECLARE @CENA_DOBA decimal(30, 2);
    DECLARE @CENA_NETTO decimal(30, 2);
    DECLARE @CENA_BRUTTO decimal(30, 2);
    DECLARE @WARTOSC_RABATU decimal(30, 2);
    DECLARE @WARTOSC_PO_RABACIE decimal(30, 2);

    DECLARE @ID_NAJEM bigint;


    SELECT @ILE_DNI = NI.ILE_DNI, @CENA_DOBA = N.CENA_DOBA_NETTO, @ID_NAJEM = NI.ID_NAJEM, @RABAT = NI.WIELKOSC_RABATU
    FROM NAJEM_INDYWIDUALNY AS NI
             JOIN NIERUCHOMOSC N on NI.ID_NIERUCHOMOSC = N.ID_NIERUCHOMOSC
    WHERE NI.UUID = @UUID_NAJEM;

    SET @CENA_NETTO = dbo.FN_POLICZ_NETTO(@ILE_DNI, @CENA_DOBA);
    SET @CENA_BRUTTO = dbo.FN_POLICZ_BRUTTO(@CENA_NETTO);
    SET @WARTOSC_RABATU = dbo.FN_POLICZ_RABAT(@CENA_BRUTTO, @RABAT);
    SET @WARTOSC_PO_RABACIE = @CENA_BRUTTO - @WARTOSC_RABATU;

    INSERT INTO RACHUNEK(UUID, ID_NAJEM, CENA_NETTO, CENA_BRUTTO, WARTOSC_BRUTTO_PO_RABACIE)
    VALUES (dbo.getUUID(), @ID_NAJEM, @CENA_NETTO, @CENA_BRUTTO, @WARTOSC_PO_RABACIE);

    UPDATE NAJEM_INDYWIDUALNY SET ID_RACHUNEK = @ID_RACHUNEK WHERE ID_NAJEM = @ID_NAJEM;

END

GO

-- PROCEUDRA ODPOWIEDZIALNA ZA DODANIE FAKTURY DO TABELI FAKTURA (UŻYWANA W TRIGGERZE PODCZAS DODAWANIA NOWEGO WYNAJMU FIRMOWEGO) ORAZ WYLICZENIE
-- WSZYSTKICH WARTOSCI POTRZEBNYCH DO FAKTURY ORAZ ZROBIENIA UPDATE ID_FAKTURY W TABELI NAJEM_FIRMA
CREATE PROCEDURE PROC_DODAJ_FAKTURA(@UUID_NAJEM varchar(255), @ID_FAKTURA bigint) AS
BEGIN

    DECLARE @ILE_DNI int;
    DECLARE @RABAT decimal(2, 2);
    DECLARE @CENA_DOBA decimal(30, 2);
    DECLARE @CENA_NETTO decimal(30, 2);
    DECLARE @CENA_BRUTTO decimal(30, 2);
    DECLARE @WARTOSC_RABATU decimal(30, 2);
    DECLARE @WARTOSC_PO_RABACIE decimal(30, 2);

    DECLARE @ID_NAJEM bigint;


    SELECT @ILE_DNI = NI.ILE_DNI, @CENA_DOBA = N.CENA_DOBA_NETTO, @ID_NAJEM = NI.ID_NAJEM, @RABAT = NI.WIELKOSC_RABATU
    FROM NAJEM_FIRMA AS NI
             JOIN NIERUCHOMOSC N on NI.ID_NIERUCHOMOSC = N.ID_NIERUCHOMOSC
    WHERE NI.UUID = @UUID_NAJEM;

    SET @CENA_NETTO = dbo.FN_POLICZ_NETTO(@ILE_DNI, @CENA_DOBA);
    SET @CENA_BRUTTO = dbo.FN_POLICZ_BRUTTO(@CENA_NETTO);
    SET @WARTOSC_RABATU = dbo.FN_POLICZ_RABAT(@CENA_BRUTTO, @RABAT);
    SET @WARTOSC_PO_RABACIE = @CENA_BRUTTO - @WARTOSC_RABATU;

    INSERT INTO FAKTURA(UUID, ID_NAJEM, CENA_NETTO, CENA_BRUTTO, WARTOSC_BRUTTO_PO_RABACIE)
    VALUES (dbo.getUUID(), @ID_NAJEM, @CENA_NETTO, @CENA_BRUTTO, @WARTOSC_PO_RABACIE);

--     DECLARE @FAKTURA_NOWA_ID bigint;
--
--     SELECT @FAKTURA_NOWA_ID = FAKTURA.ID_FAKTURA FROM FAKTURA WHERE @ID_NAJEM = @ID_NAJEM;

    UPDATE NAJEM_FIRMA SET ID_FAKTURA = @ID_FAKTURA WHERE ID_NAJEM = @ID_NAJEM;

END

GO

-- ODPALANA NA UPDATE CZY_OPLACONY DLA RACHUNKU
CREATE PROCEDURE PROC_NAJEM_INDYWIDUALNY_UPDATE_STATUS_WYNAJMU_JAK_FAKTURA_OPLACONA(@ID_NAJEM bigint) AS
BEGIN
    DECLARE @CZY_OPLACONY bit;

    SELECT @CZY_OPLACONY = CZY_OPLACONY
    FROM dbo.FN_ZWROC_TABELE_WYNAJEM_INDYWIDUALNY_JOIN_RACHUNEK_BY_NAJEM_ID(@ID_NAJEM);

    IF (@CZY_OPLACONY = 1)
        BEGIN
            UPDATE NAJEM_INDYWIDUALNY SET ID_STATUS=102 WHERE ID_NAJEM = @ID_NAJEM;
        END
END

GO

-- ODPALANA NA UPDATE CZY_OPLACONY DLA FAKTURY
CREATE PROCEDURE PROC_NAJEM_FIRMA_UPDATE_STATUS_WYNAJMU_JAK_FAKTURA_OPLACONA(@ID_NAJEM bigint) AS
BEGIN
    DECLARE @CZY_OPLACONA bit;

    SELECT @CZY_OPLACONA = CZY_OPLACONA
    FROM dbo.FN_ZWROC_TABELE_WYNAJEM_FIRMA_JOIN_FAKTURA_BY_NAJEM_ID(@ID_NAJEM);

    IF (@CZY_OPLACONA = 1)
        BEGIN
            UPDATE NAJEM_FIRMA SET ID_STATUS=102 WHERE ID_NAJEM = @ID_NAJEM;
        END
END

GO

-- ZAMIEN STATUS WSZYSTKICH NAJEM_INDYWIDUALNY OPLACONY NA ARCHIWUM
CREATE PROCEDURE PROC_ZMIEN_STATUS_OPLACONY_NA_ARCHIWUM_INDYWIDUALNY AS
BEGIN
    -- UTWORZ CURSOR (ITERATOR) TYLKO PO NAJMACH INDYWIDUALNYCH KTORE MAJA STATUS "OPLACONY"
    DECLARE CURSOR_ITERACJA_PO_WYNAJMACH_INDYWIDUALNYCH CURSOR FOR
        SELECT ID_NAJEM FROM NAJEM_INDYWIDUALNY WHERE ID_STATUS = 102;

    DECLARE @WYNAJEM_ID bigint;
    OPEN CURSOR_ITERACJA_PO_WYNAJMACH_INDYWIDUALNYCH
    FETCH NEXT FROM CURSOR_ITERACJA_PO_WYNAJMACH_INDYWIDUALNYCH INTO @WYNAJEM_ID;

    WHILE @@FETCH_STATUS = 0
        BEGIN
            PRINT ('Status wynajmu ID:' + str(@WYNAJEM_ID) +
                   ' klienta indywidualnego został zmieniony z OPLACONY na ARCHIWUM!');
            UPDATE NAJEM_INDYWIDUALNY SET ID_STATUS=103 WHERE ID_NAJEM = @WYNAJEM_ID;
            FETCH NEXT FROM CURSOR_ITERACJA_PO_WYNAJMACH_INDYWIDUALNYCH INTO @WYNAJEM_ID;
        END
    DEALLOCATE CURSOR_ITERACJA_PO_WYNAJMACH_INDYWIDUALNYCH;
END
GO

-- TEST DZIAŁA JAK SĄ JAKIES WYNAJMY_INDYWIDUALNE ZE STATUSEM 102 - OPŁACONY
EXEC dbo.PROC_ZMIEN_STATUS_OPLACONY_NA_ARCHIWUM_INDYWIDUALNY

GO

-- ZAMIEN STATUS WSZYSTKICH NAJEM_FIRMA OPLACONY NA ARCHIWUM
CREATE PROCEDURE PROC_ZMIEN_STATUS_OPLACONY_NA_ARCHIWUM_FIRMA AS
BEGIN
    -- UTWORZ CURSOR (ITERATOR) TYLKO PO NAJMACH FIRMOWYCH KTORE MAJA STATUS "OPLACONY"
    DECLARE CURSOR_ITERACJA_PO_WYNAJMACH_FIRMOWYCH CURSOR FOR
        SELECT ID_NAJEM FROM NAJEM_FIRMA WHERE ID_STATUS = 102;

    DECLARE @WYNAJEM_ID bigint;
    OPEN CURSOR_ITERACJA_PO_WYNAJMACH_FIRMOWYCH
    FETCH NEXT FROM CURSOR_ITERACJA_PO_WYNAJMACH_FIRMOWYCH INTO @WYNAJEM_ID;

    WHILE @@FETCH_STATUS = 0
        BEGIN
            PRINT ('Status wynajmu ID:' + str(@WYNAJEM_ID) +
                   ' klienta firmowego został zmieniony z OPLACONY na ARCHIWUM!');
            UPDATE NAJEM_FIRMA SET ID_STATUS=103 WHERE ID_NAJEM = @WYNAJEM_ID;
            FETCH NEXT FROM CURSOR_ITERACJA_PO_WYNAJMACH_FIRMOWYCH INTO @WYNAJEM_ID;
        END
    DEALLOCATE CURSOR_ITERACJA_PO_WYNAJMACH_FIRMOWYCH;
END
GO

-- TEST PROCEDURY
EXEC dbo.PROC_ZMIEN_STATUS_OPLACONY_NA_ARCHIWUM_FIRMA;





