USE MARCIN_NIERUCHOMOSC;GO-- TRIGGER ODPALANY ZAMIAST INSERTÓW NA TABELE NAJEM_INDYWIDUALNY-- WALIDUJE POPRAWNOSC WPORWADZONEJ DATY NAJMU (czy DATA_DO nie jest przed DATA_OD oraz czy DATA_OD/DATA_DO nie znajduje sie w PRRZESZLOSCI)-- JEZELI SPELNI WARUNKI TO ROBI INSERT DO NAJEM_INDYWIDUALNY I POWODUJE DODANIE RACHUNKU ZA NAJEMCREATE TRIGGER TR_NAJEM_INDYWIDUALNY_SPRAWDZ_POPRAWNOSC_DATY_ORAZ_DOSTEPNOSC_WYNAJECIA    ON NAJEM_INDYWIDUALNY    INSTEAD OF INSERT    ASBEGIN    BEGIN TRY        DECLARE @FROM date;        DECLARE @TO date;        DECLARE @NIERUCH bigint;        DECLARE @UUID varchar(255);        SELECT @UUID = inserted.UUID,               @FROM = inserted.DATA_OD,               @TO = inserted.DATA_DO,               @NIERUCH = inserted.ID_NIERUCHOMOSC        FROM inserted;        IF (@TO < @FROM OR @FROM < GETDATE())            BEGIN                RAISERROR ('Zle daty wynajmu! Data OD jest po dacie PO lub OD znajduje sie w przeszlosci!',17,1);            END        ELSE            IF (dbo.FN_SPRAWDZ_CZY_WYNAJEM_FRIMA_ISTNIEJE(@NIERUCH, @FROM, @TO) = 1 OR                dbo.FN_SPRAWDZ_CZY_WYNAJEM_INDYWIDUALNY_ISTNIEJE(@NIERUCH, @FROM, @TO) = 1)                BEGIN                    RAISERROR ('Nieruchomość jest wynajmowana w tym terminie!',17,1);                END            ELSE                BEGIN                    INSERT INTO NAJEM_INDYWIDUALNY (UUID, ID_KLIENT_INDYWIDUALNY, DATA_OD, DATA_DO, ID_NIERUCHOMOSC,                                                    WIELKOSC_RABATU, ID_RACHUNEK, ILE_DNI)                    SELECT inserted.UUID,                           inserted.ID_KLIENT_INDYWIDUALNY,                           inserted.DATA_OD,                           inserted.DATA_DO,                           inserted.ID_NIERUCHOMOSC,                           dbo.FN_ILE_PROCENT_RABATU(inserted.DATA_OD, inserted.DATA_DO),                           null,                           DATEDIFF(day, inserted.DATA_OD, inserted.DATA_DO)                    FROM inserted;                END        DECLARE @NAJEM_ID_DO_RACHUNKU bigint;        SELECT @NAJEM_ID_DO_RACHUNKU = NI.ID_NAJEM FROM NAJEM_INDYWIDUALNY AS NI WHERE NI.UUID = @UUID;        IF EXISTS(SELECT * FROM NAJEM_INDYWIDUALNY AS NI WHERE NI.UUID = @UUID)            BEGIN                EXEC dbo.PROC_DODAJ_RACHUNEK @UUID_NAJEM = @UUID, @ID_RACHUNEK = @NAJEM_ID_DO_RACHUNKU;            END    END TRY    BEGIN CATCH        EXEC FN_ERROR_HANDLER    END CATCHENDGO-- TRIGGER ODPALANY ZAMIAST INSERTÓW NA TABELE NAJEM_FIRMA-- WALIDUJE POPRAWNOSC WPORWADZONEJ DATY NAJMU (czy DATA_DO nie jest przed DATA_OD oraz czy DATA_OD/DATA_DO nie znajduje sie w PRRZESZLOSCI)-- JEZELI SPELNI WARUNKI TO ROBI INSERT DO NAJEM_FIRMA I POWODUJE DODANIE FAKTURY ZA NAJEMCREATE TRIGGER TR_NAJEM_FIRMA_SPRAWDZ_POPRAWNOSC_DATY_ORAZ_DOSTEPNOSC_WYNAJECIA    ON NAJEM_FIRMA    INSTEAD OF INSERT    ASBEGIN    BEGIN TRY        DECLARE @FROM date;        DECLARE @TO date;        DECLARE @NIERUCH bigint;        DECLARE @UUID varchar(255);        SELECT @UUID = inserted.UUID,               @FROM = inserted.DATA_OD,               @TO = inserted.DATA_DO,               @NIERUCH = inserted.ID_NIERUCHOMOSC        FROM inserted;        IF (@TO < @FROM OR @FROM < GETDATE())            BEGIN                RAISERROR ('Zle daty wynajmu! Data OD jest po dacie PO lub OD znajduje sie w przeszlosci!',17,1);            END        ELSE            IF (dbo.FN_SPRAWDZ_CZY_WYNAJEM_FRIMA_ISTNIEJE(@NIERUCH, @FROM, @TO) = 1 OR                dbo.FN_SPRAWDZ_CZY_WYNAJEM_INDYWIDUALNY_ISTNIEJE(@NIERUCH, @FROM, @TO) = 1)                BEGIN                    RAISERROR ('Nieruchomość jest wynajmowana w tym terminie!',17,1);                END            ELSE                BEGIN                    INSERT INTO NAJEM_FIRMA (UUID, ID_KLIENT_FIRMA, DATA_OD, DATA_DO, ID_NIERUCHOMOSC,                                             WIELKOSC_RABATU, ID_FAKTURA, ILE_DNI)                    SELECT inserted.UUID,                           inserted.ID_KLIENT_FIRMA,                           inserted.DATA_OD,                           inserted.DATA_DO,                           inserted.ID_NIERUCHOMOSC,                           dbo.FN_ILE_PROCENT_RABATU(inserted.DATA_OD, inserted.DATA_DO),                           null,                           DATEDIFF(day, inserted.DATA_OD, inserted.DATA_DO)                    FROM inserted;                END        DECLARE @NAJEM_ID_DO_FAKTURY bigint;        SELECT @NAJEM_ID_DO_FAKTURY = NI.ID_NAJEM FROM NAJEM_FIRMA AS NI WHERE NI.UUID = @UUID;        IF EXISTS(SELECT * FROM NAJEM_FIRMA AS NI WHERE NI.UUID = @UUID)            BEGIN                EXEC dbo.PROC_DODAJ_FAKTURA @UUID_NAJEM = @UUID, @ID_FAKTURA = @NAJEM_ID_DO_FAKTURY;            END    END TRY    BEGIN CATCH        EXEC FN_ERROR_HANDLER    END CATCHENDGO-- NA TABELI RACHUNEK ZAMIAST UPDATE WERYFIKOWANE JEST CZY TYLKO STATUS OPLACONY SIE ZMIENIA -> NIE MOZNA EDYTOWAC INNYCH-- DANYCH W TEJ TABELI RECZNIECREATE TRIGGER TR_ON_UPDATE_CZY_OPLACONY_RACHUNEK    ON RACHUNEK    INSTEAD OF UPDATE ASBEGIN    DECLARE @ID_NAJMU bigint;    DECLARE @CZY_OPLACONY bit;    SELECT @ID_NAJMU = inserted.ID_NAJEM, @CZY_OPLACONY = inserted.CZY_OPLACONY FROM inserted;    IF (@CZY_OPLACONY = 1)        BEGIN            -- TUTAJ SIE ROBI UPDATE TEGO STATUSU CZY OPLACONY            UPDATE RACHUNEK SET CZY_OPLACONY = 1 WHERE ID_NAJEM = @ID_NAJMU;            -- WYKONYWANA JEST PROCEDURA ARCHIWIZACJI DANEGO WYPOZYCZENIA -> ZMIANA STATUSU Z REZERWACJA NA OPLACONA            EXEC dbo.PROC_NAJEM_INDYWIDUALNY_UPDATE_STATUS_WYNAJMU_JAK_FAKTURA_OPLACONA @ID_NAJEM = @ID_NAJMU;        ENDENDGO-- TO JEST TO SAMO TYLKO DLA WYNAJMU FIRMOWEGO NA TABELI FAKTURA -> BO NAJEM INDYWIDUALNY MA RACHUNEK A NAJEM FIRMA MA FAKTURECREATE TRIGGER TR_ON_UPDATE_CZY_OPLACONA_FAKTURA    ON FAKTURA    INSTEAD OF UPDATE ASBEGIN    DECLARE @ID_NAJMU bigint;    DECLARE @CZY_OPLACONA bit;    SELECT @ID_NAJMU = inserted.ID_NAJEM, @CZY_OPLACONA = inserted.CZY_OPLACONA FROM inserted;    IF (@CZY_OPLACONA = 1)        BEGIN            UPDATE FAKTURA SET CZY_OPLACONA = 1 WHERE ID_NAJEM = @ID_NAJMU;            EXEC dbo.PROC_NAJEM_FIRMA_UPDATE_STATUS_WYNAJMU_JAK_FAKTURA_OPLACONA @ID_NAJEM = @ID_NAJMU;        ENDENDGO